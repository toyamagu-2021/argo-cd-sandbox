mode: deployment

fullnameOverride: "otl-controller"

clusterRole:
  # To get aws-auth configmap
  rules:
  - apiGroups:
    - ''
    resources:
    - 'configmaps'
    verbs:
    - 'get'
    - 'list'
    - 'watch'

presets:
  # Configures the Kubernetes Cluster Receiver to collect cluster-level metrics.
  # Adds the k8s_cluster receiver to the metrics pipeline
  # and adds the necessary rules to ClusteRole.
  # Best used with mode = deployment or statefulset.
  # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-cluster-receiver for details on the receiver.
  clusterMetrics:
    enabled: true
  # Configures the collector to collect kubernetes events.
  # Adds the k8sobject receiver to the logs pipeline
  # and collects kubernetes events by default.
  # Best used with mode = deployment or statefulset.
  # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-objects-receiver for details on the receiver.
  kubernetesEvents:
    enabled: true

resources:
  limits:
    cpu: 100m
    memory: 200M

config:
  receivers:
    otlp:
      protocols:
        http:
          endpoint: "${env:MY_POD_IP}:4318"
        grpc:
          endpoint: "${env:MY_POD_IP}:4317"

  processors:
    batch:
      send_batch_max_size: 1000
      send_batch_size: 100
      timeout: 10s

    probabilistic_sampler:
      sampling_percentage: 100

    # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/internal/aws/eks/metadata.yaml
    # We need AWS EC2 tag: `aws:eks:cluster-name` or `eks:cluster-name`
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/28649
    resourcedetection/eks:
      detectors: [env, eks]
      timeout: 15s
      override: false
      eks:
        resource_attributes:
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          k8s.cluster.name:
            enabled: true

  connectors:
      datadog/connector:

  exporters:
    datadog:
      api:
        site: datadoghq.com
        key: {{ requiredEnv "DD_API_KEY" | quote }}

  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [batch, resourcedetection/eks]
        exporters: [datadog/connector]

      traces/2: # this pipeline uses sampling
        receivers: [datadog/connector]
        processors: [batch, probabilistic_sampler]
        exporters: [datadog]

      metrics:
        receivers: [datadog/connector]
        processors: [batch, resourcedetection/eks]
        exporters: [datadog]

      logs:
        exporters: [datadog]
        processors: [batch, resourcedetection/eks]
